// Tests running on hardware with custom path to libdcap_quoteprov.so
def ACCTest(String compiler, String build_type) {
    def c_compiler = "clang-7"
    def cpp_compiler = "clang++-7"
    if (compiler == "gcc") {
        c_compiler = "gcc"
        cpp_compiler = "g++"
    }
    stage("ACC1604 ${compiler} SGX1-FLC ${build_type}") {
        node('ACC-1604') {
            ws("${HOME}/workspace/${JOB_NAME}/${BUILD_ID}") {
                cleanWs()
                checkout scm

                // Get Jenkins user and group for docker image
                def dockerBuildArgs = "--build-arg UID=\$(id -u) --build-arg GID=\$(id -g) --build-arg UNAME=\$(id -un) --build-arg GNAME=\$(id -gn)"

                // Generate libdcap_quoteprov.so in the $WORKSPACE/src/Linux folder
                def buildImage = docker.build("az-dcap-builder", "${dockerBuildArgs} ${WORKSPACE}/.jenkins")
                buildImage.inside {
                    dir('src/Linux') {
                        sh './configure'
                        sh 'make'
                    }
                }

                // Run hardware tests using custom LD_PRELOAD
                dir('openenclave') {
                    git url: 'https://github.com/Microsoft/openenclave.git'
                }
                dir('openenclave/build') {
                    withEnv(["CC=${c_compiler}","CXX=${cpp_compiler}","LD_LIBRARY_PATH=${WORKSPACE}/src/Linux"]) {
                        timeout(15) {
                            sh """
                            cmake ${WORKSPACE}/openenclave -DCMAKE_BUILD_TYPE=${build_type}
                            make
                            ctest --output-on-failure
                            """
                        }
                    }
                }
            }
        }
    }
}

// Test using oetools-test Docker image with /dev/sgx mounted inside container
def ACCContainerTest() {
    stage('Non-Simulation Container SGX1-FLC RelWithDebInfo') {
        node('ACC-1604') {
            ws("${HOME}/workspace/${JOB_NAME}/${BUILD_ID}") {
                cleanWs()
                checkout scm

                // Get Jenkins user and group for docker image
                def dockerBuildArgs = "--build-arg UID=\$(id -u) --build-arg GID=\$(id -g) --build-arg UNAME=\$(id -un) --build-arg GNAME=\$(id -gn)"

                // build az-dcap-client deb package
                def buildImage = docker.build("az-dcap-builder", "${dockerBuildArgs} ${WORKSPACE}/.jenkins")
                buildImage.inside {
                    dir('src/Linux') {
                        sh 'dpkg-buildpackage -us -uc'
                    }
                }

                // Clone openenclave repo
                dir('openenclave') {
                    git url: 'https://github.com/Microsoft/openenclave.git'
                }
                /*
                Use oetools-azure Dockerfile from Openenclave repository
                Remove the installed az-dcap-client from the container
                Install az-dcap-client in the container from the deb package we previously built
                */
                def oetoolsImage = docker.build("oetools-test", "--build-arg ubuntu_version=16.04 -f openenclave/.jenkins/Dockerfile ./openenclave")
                oetoolsImage.inside('-u root --device /dev/sgx:/dev/sgx') {
                    dir('src') {
                        sh 'apt remove -y az-dcap-client'
                        sh 'dpkg -i *.deb'
                    }
                    dir('openenclave/build') {
                        timeout(15) {
                            withEnv(["CC=clang-7","CXX=clang++-7"]) {
                                sh """
                                cmake ${WORKSPACE}/openenclave -DCMAKE_BUILD_TYPE=RelWithDebInfo
                                make
                                ctest --output-on-failure
                                """
                            }
                        }
                    }
                }
            }
        }
    }
}

def ACCTestOeRelease(String label, String ubuntu_version) {
    stage("OpenEnclave release samples ${label}") {
        node("${label}") {
            ws("$HOME/workspace/$JOB_NAME/$BUILD_ID") {
                cleanWs()
                checkout scm

                // Get Jenkins user and group for docker image
                def dockerBuildArgs = "--build-arg UID=\$(id -u) --build-arg GID=\$(id -g) --build-arg UNAME=\$(id -un) --build-arg GNAME=\$(id -gn)"

                // build az-dcap-client deb package
                def buildImage = docker.build("az-dcap-builder", "${dockerBuildArgs} ${WORKSPACE}/.jenkins")
                buildImage.inside {
                    dir('src/Linux') {
                        sh 'dpkg-buildpackage -us -uc'
                    }
                }

                // Clone openenclave repo
                dir('openenclave') {
                    git url: 'https://github.com/Microsoft/openenclave.git'
                }
                /*
                Use oetools-azure Dockerfile from Openenclave repository
                Remove the installed az-dcap-client from the container
                Install az-dcap-client in the container from the deb package we previously built
                then install the open-enclave package and run the samples
                */
                def oeToolsBuildarg="--build-arg ubuntu_version=${ubuntu_version}"
                def oetoolsImage = docker.build("oetools-test", "${oeToolsBuildarg} -f openenclave/.jenkins/Dockerfile ./openenclave")
                oetoolsImage.inside('-u root --device /dev/sgx:/dev/sgx') {
                    dir('src') {
                        sh 'apt remove -y az-dcap-client'
                        sh 'dpkg -i *.deb'
                        sh 'apt-get install -y open-enclave'
                    }
                    dir('samples') {
                        timeout(5) {
                            sh 'cp -r /opt/openenclave/share/openenclave/samples/* .'
                            // this needs to be replaced with the documentation path of after the new oe release (
                            sh '. /opt/openenclave/share/openenclaverc && make world'
                        }
                    }
                    // We need to remove the build folder because is created as root
                    sh 'rm -rf ./samples'
                }
            }
        }
    }
}

parallel "Non-Simulation Container SGX1-FLC RelWithDebInfo" : { ACCContainerTest() },
         "ACC1604 clang-7 SGX1-FLC Debug"                   : { ACCTest('clang-7', 'Debug') },
         "ACC1604 clang-7 SGX1-FLC Release"                 : { ACCTest('clang-7', 'Release') },
         "ACC1604 clang-7 SGX1-FLC RelWithDebInfo"          : { ACCTest('clang-7', 'RelWithDebinfo') },
         "ACC1604 gcc SGX1-FLC Debug"                       : { ACCTest('gcc', 'Debug') },
         "ACC1604 gcc SGX1-FLC Release"                     : { ACCTest('gcc', 'Release') },
         "ACC1604 gcc SGX1-FLC RelWithDebInfo"              : { ACCTest('gcc', 'RelWithDebInfo') },
         "ACC1604 OpenEnclave Release Test"                 : { ACCTestOeRelease('ACC-1604','16.04') }
