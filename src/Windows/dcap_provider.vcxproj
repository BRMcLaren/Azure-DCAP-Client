<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(SolutionDir)\packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.props" Condition="Exists('$(SolutionDir)\packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{AAA37DF8-87A5-40E9-B0DF-8919D5E92533}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
    <!-- The library name is dicatated by Intel. They look, specifically, for a dll
         with the following name. We must match it. -->
    <TargetName>dcap_quoteprov</TargetName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <ControlFlowGuard>Guard</ControlFlowGuard>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalIncludeDirectories>
        $(MSBuildProjectDirectory);
        $(MSBuildProjectDirectory)\..;
        $(MSBuildProjectDirectory)\ext;
        $(SolutionDir)\packages\Json11.1.0.1\build;
        $(SolutionDir)\packages\rmt_curl.7.51.0\build\native\include\v140\x64\Release\static\
        </AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ModuleDefinitionFile>dcap_provider.def</ModuleDefinitionFile>
      <TreatLinkerWarningAsErrors>true</TreatLinkerWarningAsErrors>
      <AdditionalDependencies>
        shlwapi.lib;
        Ws2_32.lib;
        libcurl_imp.lib;
        %(AdditionalDependencies)
      </AdditionalDependencies>
      <AdditionalLibraryDirectories>
        $(SolutionDir)\packages\rmt_curl.7.51.0\build\native\lib\v140\x64\Release\dynamic\;
        %(AdditionalLibraryDirectories)
      </AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="dllmain.cpp" />
    <ClCompile Include="local_cache.cpp" />
    <ClCompile Include="..\curl_easy.cpp" />
    <ClCompile Include="..\dcap_provider.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config">
      <SubType>Designer</SubType>
    </None>
    <None Include="dcap_provider.def" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="$(SolutionDir)\packages\rmt_curl.7.51.0\build\native\bin\v140\x64\Release\dynamic\*.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="$(SolutionDir)\packages\rmt_libssh2.1.8.0.0\build\native\bin\v140\x64\Release\dynamic\*.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="$(SolutionDir)\packages\rmt_openssl.1.1.0.3\build\native\bin\v140\x64\Release\dynamic\*.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="$(SolutionDir)\packages\rmt_zlib.1.2.8.7\build\native\bin\v140_xp\x64\Release\dynamic\*.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="$(MSBuildProjectDirectory)\curl-ca-bundle.crt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\curl_easy.h" />
    <ClInclude Include="..\dcap_provider.h" />
    <ClInclude Include="..\private.h" />
    <ClInclude Include="ext\intel\sgx_ql_lib_common.h" />
    <ClInclude Include="ext\intel\sgx_key.h" />
    <ClInclude Include="ext\intel\sgx_attributes.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <Target Name="GetPrerequisitesFromIntel" BeforeTargets="PrepareForBuild">
    <Exec Command="powershell .\get-prereqs.ps1" />
  </Target>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\packages\rmt_curl.7.51.0\build\native\rmt_curl.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\packages\rmt_curl.7.51.0\build\native\rmt_curl.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)\packages\rmt_zlib.1.2.8.7\build\native\rmt_zlib.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\packages\rmt_zlib.1.2.8.7\build\native\rmt_zlib.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)\packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.props')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.props'))" />
    <Error Condition="!Exists('$(SolutionDir)\packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)\packages\rmt_libssh2.1.8.0.0\build\native\rmt_libssh2.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\packages\rmt_libssh2.1.8.0.0\build\native\rmt_libssh2.targets'))" />
  </Target>
  <Import Project="$(SolutionDir)\packages\rmt_zlib.1.2.8.7\build\native\rmt_zlib.targets" Condition="Exists('$(SolutionDir)\packages\rmt_zlib.1.2.8.7\build\native\rmt_zlib.targets')" />
  <Import Project="$(SolutionDir)\packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.targets" Condition="Exists('$(SolutionDir)\packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.targets')" />
  <Import Project="$(SolutionDir)\packages\rmt_curl.7.51.0\build\native\rmt_curl.targets" Condition="Exists('$(SolutionDir)\packages\rmt_curl.7.51.0\build\native\rmt_curl.targets')" />
  <Import Project="$(SolutionDir)\packages\rmt_libssh2.1.8.0.0\build\native\rmt_libssh2.targets" Condition="Exists('$(SolutionDir)\packages\rmt_libssh2.1.8.0.0\build\native\rmt_libssh2.targets')" />
</Project>